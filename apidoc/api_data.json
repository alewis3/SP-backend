[  {    "type": "get",    "url": "/preferences/profile?id=XX",    "title": "Grab all profile info for a user",    "name": "GetProfile",    "group": "Preferences_General",    "description": "<p>C - This path will be called on whenever the user wants to view their profile information. The response body for this is LARGE, but many fields are optional.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The user's ID, send in the query string</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be true if the read was successful.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>An object containing all user data.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.email",            "description": "<p>The user's email.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user.name",            "description": "<p>An object containing &quot;first&quot; and &quot;last&quot; fields.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.name.first",            "description": "<p>The user's first name.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.name.last",            "description": "<p>The user's last name.</p>"          },          {            "group": "Success 200",            "type": "String",            "allowedValues": [              "\"Contributor\"",              "\"Homeowner\"",              "\"Business Owner\""            ],            "optional": false,            "field": "user.accountType",            "description": "<p>The account type of the user.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user.location",            "description": "<p>An object containing &quot;address&quot;, &quot;city&quot;, &quot;state&quot;, &quot;zip&quot;, &quot;lat&quot;, and &quot;long&quot; fields.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.location.address",            "description": "<p>The user's street address including number and street name.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "user.location.city",            "description": "<p>The user's city e.g. &quot;Austin&quot; or &quot;Dallas&quot;.</p>"          },          {            "group": "Success 200",            "type": "String",            "size": "2",            "optional": false,            "field": "user.location.state",            "description": "<p>The user's state in this format: Texas -&gt; &quot;TX&quot; or California -&gt; &quot;CA&quot;, etc.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.location.zip",            "description": "<p>The user's zip code in number format (5 digits and valid US zip).</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.location.lat",            "description": "<p>The user's (calculated) latitude</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.location.long",            "description": "<p>The user's (calculated) longitude</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.allowedItems",            "description": "<p><em>Only for Hosts</em> The items they allow in their compost bin.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.prohibitedItems",            "description": "<p><em>Only for Hosts</em> The items they prohibit in their compost bin.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "user.radius",            "description": "<p>For contributors, the farthest they are willing to search for hosts, for Hosts, it is the farthest they want their post to display for contributors.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": true,            "field": "user.homeownerInfo",            "description": "<p>An object with information specific to homeowners.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": true,            "field": "user.homeownerInfo.meetingPlace",            "description": "<p>The address where the homeowner meets contributors (May be different than their address).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.address",            "description": "<p>The street address where the homeowner meets contributors.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.city",            "description": "<p>The city where the homeowner meets contributors.</p>"          },          {            "group": "Success 200",            "type": "String",            "size": "2",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.state",            "description": "<p>The state where the homeowner meets contributors.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.zip",            "description": "<p>The zip code where the homeowner meets contributors.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.lat",            "description": "<p>The calculated latitude of the meeting place address.</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": true,            "field": "user.homeownerInfo.meetingPlace.long",            "description": "<p>The calculated longitude of the meeting place address.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": true,            "field": "user.homeownerInfo.isListingOn",            "description": "<p>A boolean representing whether their listing is active or not.</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": true,            "field": "user.businessOwnerInfo",            "description": "<p>An object with information specific to business owners.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": true,            "field": "user.businessOwnerInfo.isListingOn",            "description": "<p>A boolean representing whether their listing is active or not.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.businessOwnerInfo.businessName",            "description": "<p>The business's name.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.businessOwnerInfo.businessWebsite",            "description": "<p>A link to the business's website.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.businessOwnerInfo.contributorCharge",            "description": "<p>The amount of money the business owner wants to charge for people contributing.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": true,            "field": "user.blockedUsers",            "description": "<p>A list of objects containing the users this user has blocked</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.blockedUsers._id",            "description": "<p>The blocked user's _id</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.blockedUsers.email",            "description": "<p>The blocked user's email</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": true,            "field": "user.blockedUsers.name",            "description": "<p>An object containing the blocked user's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.blockedUsers.name.first",            "description": "<p>The blocked user's first name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": true,            "field": "user.blockedUsers.name.last",            "description": "<p>The blocked user's last name</p>"          }        ]      },      "examples": [        {          "title": "SuccessfulContributorResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n    \"user\": {\n        \"email\": \"alewis3@stedwards.edu\",\n        \"name\": {\n            \"first\": \"Amanda\",\n            \"last\": \"Lewis\"\n        },\n        \"accountType\": \"Contributor\",\n        \"location\": {\n            \"address\": \"6600 Delmonico Dr.\",\n            \"city\": \"Austin\",\n            \"state\": \"TX\",\n            \"zip\": 78759,\n            \"lat\" : 30.4070384,\n            \"long\" : -97.77170149999999\n        },\n        radius: 5,\n        blockedUsers: [\n            {\n                \"_id\": \"5e2f1c8eec53c15ae2cb96e4\"\n                \"email\": \"eisis@stedwards.edu\"\n                \"name\": {\n                    \"first\": \"Evangeline\",\n                    \"last\": \"Mavrommati\"\n                }\n            },\n            ...\n        ]\n    }\n}",          "type": "json"        },        {          "title": "SuccessfulHomeownerResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n    \"user\": {\n        \"email\": \"alewis3@stedwards.edu\",\n        \"name\": {\n            \"first\": \"Amanda\",\n            \"last\": \"Lewis\"\n        },\n        \"accountType\": \"Contributor\",\n        \"location\": {\n            \"address\": \"6600 Delmonico Dr.\",\n            \"city\": \"Austin\",\n            \"state\": \"TX\",\n            \"zip\": 78759,\n            \"lat\" : 30.4070384,\n            \"long\" : -97.77170149999999\n        },\n        radius: 5,\n        \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n        \"prohibitedItems\": \"Meat, egg shells.\",\n        \"homeownerInfo\": {\n            \"isListingOn\": true,\n            \"meetingPlace\": {\n                \"address\" : \"1109 S. Pleasant Valley Rd.\",\n                \"city\" : \"Austin\",\n                \"state\" : \"TX\",\n                \"zip\" : 78741,\n                \"lat\" : 30.2403158,\n                \"long\" : -97.71805909999999\n            }\n        },\n        blockedUsers: [\n            {\n                \"_id\": \"5e2f1c8eec53c15ae2cb96e4\"\n                \"email\": \"eisis@stedwards.edu\"\n                \"name\": {\n                    \"first\": \"Evangeline\",\n                    \"last\": \"Mavrommati\"\n                }\n            },\n            ...\n        ]\n    }\n}",          "type": "json"        },        {          "title": "SuccessfulBusinessOwnerResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n    \"user\": {\n        \"email\": \"alewis3@stedwards.edu\",\n        \"name\": {\n            \"first\": \"Amanda\",\n            \"last\": \"Lewis\"\n        },\n        \"accountType\": \"Contributor\",\n        \"location\": {\n            \"address\": \"6600 Delmonico Dr.\",\n            \"city\": \"Austin\",\n            \"state\": \"TX\",\n            \"zip\": 78759,\n            \"lat\" : 30.4070384,\n            \"long\" : -97.77170149999999\n        },\n        radius: 5,\n        \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n        \"prohibitedItems\": \"Meat, egg shells.\",\n        \"businessOwnerInfo\": {\n            \"isListingOn\": false,\n            \"businessName\": \"Host, Post, and Compost\",\n            \"businessWebsite\": \"https://hpcompost.com\"\n        },\n        blockedUsers: [\n            {\n                \"_id\": \"5e2f1c8eec53c15ae2cb96e4\"\n                \"email\": \"eisis@stedwards.edu\"\n                \"name\": {\n                    \"first\": \"Evangeline\",\n                    \"last\": \"Mavrommati\"\n                }\n            },\n            ...\n        ]\n    }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_General"  },  {    "type": "patch",    "url": "/preferences/profile",    "title": "Modify or update a user's profile",    "name": "PatchProfile",    "group": "Preferences_General",    "description": "<p>C - This path will be called on whenever the user makes changes to their account and presses save. All fields are optional but at least one must be sent in for the request call to make sense.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user and the only required field of this request.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>A unique email (This acts as their username)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "passwordOld",            "description": "<p>The old password to match by.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "passwordNew",            "description": "<p>The new password to change password to.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "name",            "description": "<p>An object containing &quot;first&quot; and &quot;last&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name.first",            "description": "<p>The user's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name.last",            "description": "<p>The user's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"Contributor\"",              "\"Homeowner\"",              "\"Business Owner\""            ],            "optional": true,            "field": "accountType",            "description": "<p>The account type of the user.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "location",            "description": "<p>An object containing &quot;address&quot;, &quot;city&quot;, &quot;state&quot;, &quot;zip&quot;, &quot;lat&quot;, and &quot;long&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location.address",            "description": "<p>The user's street address including number and street name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location.city",            "description": "<p>The user's city e.g. &quot;Austin&quot; or &quot;Dallas&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": true,            "field": "location.state",            "description": "<p>The user's state in this format: Texas -&gt; &quot;TX&quot; or California -&gt; &quot;CA&quot;, etc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "location.zip",            "description": "<p>The user's zip code in number format (5 digits and valid US zip)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "allowedItems",            "description": "<p>The user's allowed items (for hosts only)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "prohibitedItems",            "description": "<p>The user's prohibited items (for hosts only)</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "radius",            "description": "<p>The user's radius (for contributors, it's the farthest they are willing to look for hosts, and for hosts, its the farthest they want their post to display)</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "homeownerInfo",            "description": "<p>An object with information specific to homeowners.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "homeownerInfo.meetingPlace",            "description": "<p>An object with the address of the meeting place for homeowners</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homeownerInfo.meetingPlace.address",            "description": "<p>The address where the homeowner meets contributors.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homeownerInfo.meetingPlace.city",            "description": "<p>The city where the homeowner meets contributors.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "homeownerInfo.meetingPlace.state",            "description": "<p>The state where the homeowner meets contributors.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "homeownerInfo.meetingPlace.zip",            "description": "<p>The zip code where the homeowner meets contributors.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "homeownerInfo.isListingOn",            "description": "<p>Whether or not the listing is active</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "businessOwnerInfo",            "description": "<p>An object with information specific to business owners.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "businessOwnerInfo.isListingOn",            "description": "<p>Whether or not the listing is active.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "businessOwnerInfo.businessName",            "description": "<p>The name of the business.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "businessOwnerInfo.businessWebsite",            "description": "<p>The website/url of the business.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "businessOwnerInfo.contributorCharge",            "description": "<p>How much the business wants to charge contributors.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be true if the update was successful.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "UserUpdateError:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"UserUpdateError: _____\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_General"  },  {    "type": "get",    "url": "/preferences/allowedItems?id=XX",    "title": "Get allowed items",    "name": "GetAllowedItems",    "group": "Preferences_Specific",    "description": "<p>C - This route will be called when a user wants to check their allowed items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to get</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items were grabbed from the DB</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "allowedItems",            "description": "<p>The items they allow</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"allowedItems\": \"Dried leaves, cardboard, cereal boxes, fruit and vegetable waste.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be grabbed.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "get",    "url": "/preferences/prohibitedItems?id=XX",    "title": "Get prohibited items",    "name": "GetProhibitedItems",    "group": "Preferences_Specific",    "description": "<p>C - This route will be called when a user wants to check their prohibited items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to get</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items were grabbed from the DB</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "prohibitedItems",            "description": "<p>The items they prohibit</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"prohibitedItems\": \"Meat/egg scraps, dairy, fat, lard, oils.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be grabbed.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/businessOwnerInfo",    "title": "Update a business owner's info",    "name": "PatchBusinessOwnerInfo",    "group": "Preferences_Specific",    "description": "<p>C - This route will allow you to update or set a business owner's info, including allowed/prohibitedItems, business name, business website, contributor charge (if any), display radius, and isListingOn, but also the location (which every user has). For the business owner, the location should be the same as the business address. These fields are optional, but send in at least one so the request has something to do.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to edit (<em>Must be a Business Owner!</em>)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "allowedItems",            "description": "<p>The items they allow.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "prohibitedItems",            "description": "<p>The items they prohibit.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "businessName",            "description": "<p>The name of the business</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "businessWebsite",            "description": "<p>The website of the business.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "location",            "description": "<p>An object containing address information oof the business.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location.address",            "description": "<p>The address of the business.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location.city",            "description": "<p>The city of the business.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": true,            "field": "location.state",            "description": "<p>The state of the business (in two-letter abbreviation format i.e. 'TX' or 'CA')</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "location.zip",            "description": "<p>The zip of the business.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "contributorCharge",            "description": "<p>How much they charge contributors to contribute.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isListingOn",            "description": "<p>Whether or not their listing should be active.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "radius",            "description": "<p>The distance (in miles) of how far they want their post to display from their location/business address.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the business owner's info could be successfully updated.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/disableListing",    "title": "Disable a host's listing",    "name": "PatchDisableListing",    "group": "Preferences_Specific",    "description": "<p>C - This route will disable a host's listing with only one parameter: the host's id.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the host <strong>MUST BE A HOMEOWNER OR BUSINESS OWNER'S ID</strong></p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the listing could be updated as inactive.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/enableListing",    "title": "Enable a host's listing",    "name": "PatchEnableListing",    "group": "Preferences_Specific",    "description": "<p>C - This route will enable a host's listing with only one parameter: the host's id.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the host <strong>MUST BE A HOMEOWNER OR BUSINESS OWNER'S ID</strong></p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the listing could be updated as active.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "get",    "url": "/preferences/isListingOn?id=XX",    "title": "Get a host's current listing status",    "name": "PatchGetListing",    "group": "Preferences_Specific",    "description": "<p>C - This route will get a host's listing status.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the host, sent in the query string <strong>MUST BE A HOMEOWNER OR BUSINESS OWNER'S ID</strong></p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the listing could be updated as active.</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "isListingOn",            "description": "<p>Whether or not the listing is active at the time of the request.</p>"          }        ]      },      "examples": [        {          "title": "SuccessfulGetIsListingOn:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"isListingOn\": true/false\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/newHomeowner",    "title": "* Update a user's account type to \"Homeowner\"",    "name": "PatchHomeownerAcctType",    "group": "Preferences_Specific",    "description": "<p>NI - This route will allow you to update a user's accountType to &quot;Homeowner&quot;, and set all the homeowner information.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to edit (<em>Must be a Homeowner!</em>)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "allowedItems",            "description": "<p>The items they allow.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "prohibitedItems",            "description": "<p>The items they prohibit.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "meetingPlace",            "description": "<p>An object containing address information on where they want to meet.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "meetingPlace.address",            "description": "<p>The address of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "meetingPlace.city",            "description": "<p>The city of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": false,            "field": "meetingPlace.state",            "description": "<p>The state of the meeting place (in two-letter abbreviation format i.e. 'TX' or 'CA')</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "meetingPlace.zip",            "description": "<p>The zip of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isListingOn",            "description": "<p>Whether or not their listing should be active.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "radius",            "description": "<p>The distance (in miles) of how far they want their post to display.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the new homeowner's info could be successfully updated.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/homeownerInfo",    "title": "Update a homeowner's info",    "name": "PatchHomeownerInfo",    "group": "Preferences_Specific",    "description": "<p>C - This route will allow you to update or set a homeowner's info, including allowed/prohibitedItems, meetingPlace, display radius, and isListingOn. These fields are optional, but send in at least one so the request has something to do.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to edit (<em>Must be a Homeowner!</em>)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "allowedItems",            "description": "<p>The items they allow.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "prohibitedItems",            "description": "<p>The items they prohibit.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "meetingPlace",            "description": "<p>An object containing address information on where they want to meet.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "meetingPlace.address",            "description": "<p>The address of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "meetingPlace.city",            "description": "<p>The city of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": true,            "field": "meetingPlace.state",            "description": "<p>The state of the meeting place (in two-letter abbreviation format i.e. 'TX' or 'CA')</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "meetingPlace.zip",            "description": "<p>The zip of the meeting place.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "isListingOn",            "description": "<p>Whether or not their listing should be active.</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "radius",            "description": "<p>The distance (in miles) of how far they want their post to display.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the homeowner's info could be successfully updated.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "patch",    "url": "/preferences/updateListing",    "title": "Update a host's listing as active or inactive",    "name": "PatchUpdateListing",    "group": "Preferences_Specific",    "description": "<p>C - This route will update a host's listing.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the host <strong>MUST BE A HOMEOWNER OR BUSINESS OWNER'S ID</strong></p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "isListingOn",            "description": "<p>The boolean that isListingOn should be set to</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the listing could be updated as active.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "ParameterTypeMismatch:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"ParameterTypeMismatch\"\n}",          "type": "json"        },        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "post",    "url": "/preferences/allowedItems",    "title": "Save allowed items",    "name": "PostAllowedItems",    "group": "Preferences_Specific",    "description": "<p>C - This route will be called when a user sets or updates their allowed items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to set</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "allowedItems",            "description": "<p>The items they want to allow</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items could be set</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be set.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "MissingRequiredFields:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingRequiredFields\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "post",    "url": "/preferences/prohibitedItems",    "title": "Save prohibited items",    "name": "PostProhibitedItems",    "group": "Preferences_Specific",    "description": "<p>C - This route will be called when a user sets or updates their prohibited items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to set</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "prohibitedItems",            "description": "<p>The items they want to prohibit</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items could be set</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be set.</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "MissingRequiredFields:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingRequiredFields\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences_Specific"  },  {    "type": "post",    "url": "/users/register",    "title": "Create/register a new user",    "name": "CreateUser",    "group": "Users",    "description": "<p>C - This route handles registering a user. The request will include an email, password, first and last name, account type, and a birthday in string format.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>A unique email to register with (This acts as their username)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>A strong password in plaintext. This is hashed on the API side.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "name",            "description": "<p>An object containing &quot;first&quot; and &quot;last&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name.first",            "description": "<p>The user's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name.last",            "description": "<p>The user's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"Contributor\"",              "\"Homeowner\"",              "\"Business Owner\"",              "\"System Admin\""            ],            "optional": false,            "field": "accountType",            "description": "<p>The account type of the user.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "location",            "description": "<p>An object containing &quot;address&quot;, &quot;city&quot;, &quot;state&quot;, &quot;zip&quot;, &quot;lat&quot;, and &quot;long&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "location.address",            "description": "<p>The user's street address including number and street name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "location.city",            "description": "<p>The user's city e.g. &quot;Austin&quot; or &quot;Dallas&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": false,            "field": "location.state",            "description": "<p>The user's state in this format: Texas -&gt; &quot;TX&quot; or California -&gt; &quot;CA&quot;, etc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "location.zip",            "description": "<p>The user's zip code in number format (5 digits and valid US zip)</p>"          }        ]      },      "examples": [        {          "title": "ValidRequestExample:",          "content": "{\n    \"email\": \"alewis3@stedwards.edu\",\n    \"password\": \"password\",\n    \"name\": {\n        \"first\": \"Amanda\",\n        \"last\": \"Lewis\"\n    },\n    \"accountType\": \"Homeowner\",\n    \"location\": {\n        \"address\": \"3001 S. Congress Ave.\",\n        \"city\": \"Austin\",\n        \"state\": \"TX\",\n        \"zip\": 78704\n    }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "201",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if successful registration</p>"          }        ]      },      "examples": [        {          "title": "CreatedResponse:",          "content": "HTTP/1.1 201 CREATED\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "FormattingError:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"FormattingError: ______\"\n}",          "type": "json"        },        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "get",    "url": "/users/hosts?id=X",    "title": "Get all nearby hosts location",    "name": "GetHosts",    "group": "Users",    "description": "<p>C - This endpoint limits the search of hosts by the radius of that user and the radius of each individual host. Will return a list of homeowners and business owners in range and not blocked.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Sent in the request url, the user id of the user you want to match by.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if hosts could be found</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "businessOwners",            "description": "<p>The list of business owners to display on the map</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners._id",            "description": "<p>The user id of the host</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "businessOwners.location",            "description": "<p>The location of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.location.lat",            "description": "<p>The lat of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.location.long",            "description": "<p>The long of the host</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.allowedItems",            "description": "<p>The types of items they allow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.prohibitedItems",            "description": "<p>The types of items they prohibit</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.businessName",            "description": "<p>The name of the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.businessWebsite",            "description": "<p>The website/url of the business</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.contributorCharge",            "description": "<p>The amount they charge contributors to contribute to their bin</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "businessOwners.name",            "description": "<p>An object containing the name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.name.first",            "description": "<p>The first name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.name.last",            "description": "<p>The last name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.isListingOn",            "description": "<p>Whether or not the listing is active.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "homeowners",            "description": "<p>The list of homeowners to display on the map</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners._id",            "description": "<p>The user id of the host</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "homeowners.location",            "description": "<p>The location of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "homeowners.location.lat",            "description": "<p>The lat of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "homeowners.location.long",            "description": "<p>The long of the host</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.allowedItems",            "description": "<p>The types of items they allow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.prohibitedItems",            "description": "<p>The types of items they prohibit</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "homeowners.name",            "description": "<p>An object containing the name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.name.first",            "description": "<p>The first name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.name.last",            "description": "<p>The last name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.isListingOn",            "description": "<p>Whether or not the listing is active.</p>"          }        ]      },      "examples": [        {          "title": "FoundHosts",          "content": "HTTP/1.1 200 OK\n  {\n      \"success\": true,\n      \"businessOwners\": [\n          {\n              \"_id\": \"5daba8bc7f50f17bf3b7be55\",\n              \"location\": {\n                  \"lat\": -97,\n                  \"long\": 30\n              },\n              \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n              \"prohibitedItems\": \"Meat, egg shells.\",\n              \"businessName\": \"Host, Post, and Compost\",\n              \"businessWebsite\": \"https://hpcompost.com\",\n              \"contributorCharge\": 2,\n              \"name\": {\n                  \"first\": \"Amanda\",\n                  \"last\": \"Lewis\"\n               },\n              \"isListingOn\": true\n          },\n          ...\n      ],\n      \"homeowners\": [\n          {\n              \"_id\": \"5daba8bc7f50f17bf3b7be55\",\n              \"location\": {\n                  \"lat\": -98,\n                  \"long\": 31\n              }\n              \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n              \"prohibitedItems\": \"Meat, egg shells.\",\n              \"name\": {\n                  \"first\": \"Amanda\",\n                  \"last\": \"Lewis\"\n               },\n               \"isListingOn\": true\n          },\n          ...\n      ]\n  }",          "type": "json"        },        {          "title": "NoHostsFound",          "content": "HTTP/1.1 204 NO CONTENT\n{\n    \"success\": true,\n    \"businessOwners\": [],\n    \"homeowners\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the id was not found or the id did not belong to a contributor</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>An error message of what went wrong</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "get",    "url": "/users/hostsAll?id=X",    "title": "Get all hosts location",    "name": "GetHostsAll",    "group": "Users",    "description": "<p>C - This endpoint returns all hosts registered.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Sent in the request url, the user id of the user you want to match by.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if hosts could be found</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "businessOwners",            "description": "<p>The list of business owners to display on the map</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners._id",            "description": "<p>The user id of the host</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "businessOwners.location",            "description": "<p>The location of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.location.lat",            "description": "<p>The lat of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.location.long",            "description": "<p>The long of the host</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.allowedItems",            "description": "<p>The types of items they allow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.prohibitedItems",            "description": "<p>The types of items they prohibit</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.businessName",            "description": "<p>The name of the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.businessWebsite",            "description": "<p>The website/url of the business</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "businessOwners.contributorCharge",            "description": "<p>The amount they charge contributors to contribute to their bin</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "businessOwners.name",            "description": "<p>An object containing the name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.name.first",            "description": "<p>The first name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.name.last",            "description": "<p>The last name of the person to contact at the business</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "businessOwners.isListingOn",            "description": "<p>Whether or not the listing is active.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "homeowners",            "description": "<p>The list of homeowners to display on the map</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners._id",            "description": "<p>The user id of the host</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "homeowners.location",            "description": "<p>The location of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "homeowners.location.lat",            "description": "<p>The lat of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "homeowners.location.long",            "description": "<p>The long of the host</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.allowedItems",            "description": "<p>The types of items they allow</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.prohibitedItems",            "description": "<p>The types of items they prohibit</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "homeowners.name",            "description": "<p>An object containing the name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.name.first",            "description": "<p>The first name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.name.last",            "description": "<p>The last name of the homeowner</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "homeowners.isListingOn",            "description": "<p>Whether or not the listing is active.</p>"          }        ]      },      "examples": [        {          "title": "FoundHosts",          "content": "HTTP/1.1 200 OK\n  {\n      \"success\": true,\n      \"businessOwners\": [\n          {\n              \"_id\": \"5daba8bc7f50f17bf3b7be55\",\n              \"location\": {\n                  \"lat\": -97,\n                  \"long\": 30\n              },\n              \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n              \"prohibitedItems\": \"Meat, egg shells.\",\n              \"businessName\": \"Host, Post, and Compost\",\n              \"businessWebsite\": \"https://hpcompost.com\",\n              \"contributorCharge\": 2,\n              \"name\": {\n                  \"first\": \"Amanda\",\n                  \"last\": \"Lewis\"\n               },\n              \"isListingOn\": true\n          },\n          ...\n      ],\n      \"homeowners\": [\n          {\n              \"_id\": \"5daba8bc7f50f17bf3b7be55\",\n              \"location\": {\n                  \"lat\": -98,\n                  \"long\": 31\n              }\n              \"allowedItems\": \"Cardboard, food waste, dried leaves.\",\n              \"prohibitedItems\": \"Meat, egg shells.\",\n              \"name\": {\n                  \"first\": \"Amanda\",\n                  \"last\": \"Lewis\"\n               },\n               \"isListingOn\": true\n          },\n          ...\n      ]\n  }",          "type": "json"        },        {          "title": "NoHostsFound",          "content": "HTTP/1.1 204 NO CONTENT\n{\n    \"success\": true,\n    \"businessOwners\": [],\n    \"homeowners\": []\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the id was not found or the id did not belong to a contributor</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>An error message of what went wrong</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "AccountTypeMismatch",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"AccountTypeMismatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users/login",    "title": "Authenticate a user for login",    "name": "LoginUser",    "group": "Users",    "description": "<p>C - This route handles authenticating a user when they want to login.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>The email that the user signed up with</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The password that the user signed up with</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if successful login</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accountType",            "description": "<p>The type of the user that was authenticated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The id of the user that was authenticated</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"accountType\": \"Contributor\",\n    \"userId\": \"5dac1173f950cb1188348941\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if user could not be authenticated for any reason</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The reason why the user could not be authenticated</p>"          }        ]      },      "examples": [        {          "title": "WrongCredentials:",          "content": "HTTP/1.1 401 UNAUTHORIZED\n{\n  \"success\": false,\n  \"error\": \"WrongCredentials\"\n}",          "type": "json"        },        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "patch",    "url": "/users/blockUser",    "title": "* Blocks a user",    "name": "PatchBlockUser",    "group": "Users",    "description": "<p>NI - This route lets a user (blockingUser) block another user (blockedUser).</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "blockingUser",            "description": "<p>The user that wants to block another user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "blockedUser",            "description": "<p>The user to be blocked</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the user could be blocked</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the user could not be blocked for any reason</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The error that caused success to be false</p>"          }        ]      },      "examples": [        {          "title": "UserAlreadyBlocked:",          "content": "HTTP/1.1 400\n{\n    \"success\": false,\n    \"error\": \"UserAlreadyBlocked\"\n}",          "type": "json"        },        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "patch",    "url": "/users/unblockUser",    "title": "* Unblocks a user",    "name": "PatchUnblockUser",    "group": "Users",    "description": "<p>NI - This route lets a user (unblockingUser) unblock another user (unblockedUser).</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "unblockingUser",            "description": "<p>The user that wants to unblock another user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "unblockedUser",            "description": "<p>The user to be unblocked</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the user could be successfully unblocked</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the user could not be unblocked</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The error that caused success to be false</p>"          }        ]      },      "examples": [        {          "title": "UserNotBlocked:",          "content": "HTTP/1.1 400\n{\n    \"success\": false,\n    \"error\": \"UserNotBlocked\"\n}",          "type": "json"        },        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users/resetPassword",    "title": "Reset a user's password",    "name": "ResetPassword",    "group": "Users",    "description": "<p>C - This route handles resetting a password</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "old",            "description": "<p>The user's old password to match on</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "new",            "description": "<p>The user's new password to save in the db</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the old password matched and was able to be changed</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the old password did not match or the new pwd was not able to be changed</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The error that caused success to be false</p>"          }        ]      },      "examples": [        {          "title": "MissingId:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"MissingId\" // id was not in the body of the request\n}",          "type": "json"        },        {          "title": "NoMatch:",          "content": "HTTP/1.1 401 UNAUTHORIZED\n{\n  \"success\": false,\n  \"error\": \"NoMatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\" // id was not found in the db\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "SP-backend/apidoc/main.js",    "group": "_Users_amandalewis_gitRepos_SP_backend_apidoc_main_js",    "groupTitle": "_Users_amandalewis_gitRepos_SP_backend_apidoc_main_js",    "name": ""  }]
