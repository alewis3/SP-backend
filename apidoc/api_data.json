[  {    "type": "get",    "url": "/preferences/allowedItems?id=XX",    "title": "Get allowed items",    "name": "GetAllowedItems",    "group": "Preferences",    "description": "<p>C - This route will be called when a user wants to check their allowed items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to get</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items were grabbed from the DB</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "allowedItems",            "description": "<p>The items they allow</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"allowedItems\": \"Dried leaves, cardboard, cereal boxes, fruit and vegetable waste.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be grabbed.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences"  },  {    "type": "get",    "url": "/preferences/prohibitedItems?id=XX",    "title": "Get prohibited items",    "name": "GetProhibitedItems",    "group": "Preferences",    "description": "<p>C - This route will be called when a user wants to check their prohibited items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to get</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items were grabbed from the DB</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "prohibitedItems",            "description": "<p>The items they prohibit</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"prohibitedItems\": \"Meat/egg scraps, dairy, fat, lard, oils.\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be grabbed for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be grabbed.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences"  },  {    "type": "patch",    "url": "/preferences/profile",    "title": "Let a user edit or update their profile",    "name": "PatchProfile",    "group": "Preferences",    "description": "<p>NI - This path will be called on whenever the user makes changes to their account and presses save. All fields are optional but at least one must be sent in for the request call to make sense.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "email",            "description": "<p>A unique email to register with (This acts as their username)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "password",            "description": "<p>A strong password in plaintext. This is hashed on the API side.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "name",            "description": "<p>An object containing &quot;first&quot; and &quot;last&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name[first]",            "description": "<p>The user's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "name[last]",            "description": "<p>The user's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"Contributor\"",              "\"Homeowner\"",              "\"Business Owner\""            ],            "optional": true,            "field": "accountType",            "description": "<p>The account type of the user.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "dob",            "description": "<p>The user's Date of Birth in &quot;MM/DD/YYYY&quot; format</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "location",            "description": "<p>An object containing &quot;address&quot;, &quot;city&quot;, &quot;state&quot;, and &quot;zip&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location[address]",            "description": "<p>The user's street address including number and street name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "location[city]",            "description": "<p>The user's city e.g. &quot;Austin&quot; or &quot;Dallas&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": true,            "field": "location[state]",            "description": "<p>The user's state in this format: Texas -&gt; &quot;TX&quot; or California -&gt; &quot;CA&quot;, etc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "location[zip]",            "description": "<p>The user's zip code in number format (5 digits and valid US zip)</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be true if the update was successful.</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>This will be false if there was some sort of error.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences"  },  {    "type": "post",    "url": "/preferences/allowedItems",    "title": "Save allowed items",    "name": "PostAllowedItems",    "group": "Preferences",    "description": "<p>C - This route will be called when a user sets or updates their allowed items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to set</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "allowedItems",            "description": "<p>The items they want to allow</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items could be set</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be set.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences"  },  {    "type": "post",    "url": "/preferences/prohibitedItems",    "title": "Save prohibited items",    "name": "PostProhibitedItems",    "group": "Preferences",    "description": "<p>C - This route will be called when a user sets or updates their prohibited items</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user to set</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "prohibitedItems",            "description": "<p>The items they want to prohibit</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the items could be set</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An error object with more information on the failure.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the items could not be set for some reason.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A message of why the items could not be set.</p>"          }        ]      },      "examples": [        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Preferences"  },  {    "type": "post",    "url": "/users/register",    "title": "Create/register a new user",    "name": "CreateUser",    "group": "Users",    "description": "<p>C - This route handles registering a user. The request will include an email, password, first and last name, account type, and a birthday in string format.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>A unique email to register with (This acts as their username)</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>A strong password in plaintext. This is hashed on the API side.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "name",            "description": "<p>An object containing &quot;first&quot; and &quot;last&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name[first]",            "description": "<p>The user's first name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name[last]",            "description": "<p>The user's last name</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"Contributor\"",              "\"Homeowner\"",              "\"Business Owner\""            ],            "optional": false,            "field": "accountType",            "description": "<p>The account type of the user.</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": false,            "field": "location",            "description": "<p>An object containing &quot;address&quot;, &quot;city&quot;, &quot;state&quot;, and &quot;zip&quot; fields</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "location[address]",            "description": "<p>The user's street address including number and street name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "location[city]",            "description": "<p>The user's city e.g. &quot;Austin&quot; or &quot;Dallas&quot;</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "2",            "optional": false,            "field": "location[state]",            "description": "<p>The user's state in this format: Texas -&gt; &quot;TX&quot; or California -&gt; &quot;CA&quot;, etc</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "location[zip]",            "description": "<p>The user's zip code in number format (5 digits and valid US zip)</p>"          }        ]      },      "examples": [        {          "title": "ValidRequestExample:",          "content": "{\n    \"email\": \"alewis3@stedwards.edu\",\n    \"password\": \"password\",\n    \"name\": {\n        \"first\": \"Amanda\",\n        \"last\": \"Lewis\"\n    },\n    \"accountType\": \"Homeowner\",\n    \"location\": {\n        \"address\": \"3001 S. Congress Ave.\",\n        \"city\": \"Austin\",\n        \"state\": \"TX\",\n        \"zip\": 78704\n    }\n}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Created 201": [          {            "group": "201",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if successful registration</p>"          }        ]      },      "examples": [        {          "title": "CreatedResponse:",          "content": "HTTP/1.1 201 CREATED\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>A description of what error occurred.</p>"          }        ]      },      "examples": [        {          "title": "FormattingError:",          "content": "HTTP/1.1 400 BAD REQUEST\n{\n    \"success\": false,\n    \"error\": \"FormattingError: ______\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "get",    "url": "/users/hosts?id=X",    "title": "Get all nearby hosts location",    "name": "GetHosts",    "group": "Users",    "description": "<p>NI - This endpoint will eventually limit the search of users to a radius based on the user_id sent in and the search radius of that user, but for now it will grab all available hosts.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>Sent in the request url, the user id of the user you want to match by.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if hosts could be found</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "hosts",            "description": "<p>The list of hosts to display on the map</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "hosts.userId",            "description": "<p>The user id of the host</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "hosts.location",            "description": "<p>The location of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "hosts.location.lat",            "description": "<p>The lat of the host</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "hosts.location.long",            "description": "<p>The long of the host</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "hosts.accountType",            "description": "<p>The account type of the host (Homeowner or Business Owner)</p>"          }        ]      },      "examples": [        {          "title": "FoundHosts",          "content": "HTTP/1.1 200 OK\n  {\n      \"success\": true,\n      \"hosts\": [\n          {\n              \"userId\": \"8763a8290eg27bc3739\",\n              \"location\": {\n                  \"lat\": -97,\n                  \"long\": 30\n              },\n              \"accountType\": \"Homeowner\"\n          },\n          ...\n      ]\n  }",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if no hosts could be found or the id was not found</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>An error message of what went wrong</p>"          }        ]      },      "examples": [        {          "title": "NoHostsFound",          "content": "HTTP/1.1 204 NO CONTENT\n{\n    \"success\": false,\n    \"error\": \"NoHostsFound\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users/login",    "title": "Authenticate a user for login",    "name": "LoginUser",    "group": "Users",    "description": "<p>C - This route handles authenticating a user when they want to login.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>The email that the user signed up with</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The password that the user signed up with</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if successful login</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "accountType",            "description": "<p>The type of the user that was authenticated</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The id of the user that was authenticated</p>"          }        ]      },      "examples": [        {          "title": "SuccessResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true,\n    \"accountType\": \"Contributor\",\n    \"userId\": \"a4b751dcf51dd249\"\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some server error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if user could not be authenticated for any reason</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The reason why the user could not be authenticated</p>"          }        ]      },      "examples": [        {          "title": "UserNotFound:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"success\": false,\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        },        {          "title": "WrongCredentials:",          "content": "HTTP/1.1 401 UNAUTHORIZED\n{\n  \"success\": false,\n  \"error\": \"WrongCredentials\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "type": "post",    "url": "/users/resetPassword",    "title": "Reset a user's password",    "name": "ResetPassword",    "group": "Users",    "description": "<p>C - This route handles resetting a password</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The id of the user</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "old",            "description": "<p>The user's old password to match on</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "new",            "description": "<p>The user's new password to save in the db</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be true if the old password matched and was able to be changed</p>"          }        ]      },      "examples": [        {          "title": "UpdatedResponse:",          "content": "HTTP/1.1 200 OK\n{\n    \"success\": true\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 500": [          {            "group": "500",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if some error occurred.</p>"          },          {            "group": "500",            "type": "Object",            "optional": false,            "field": "error",            "description": "<p>An object with more information on what error occurred.</p>"          }        ],        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Boolean",            "optional": false,            "field": "success",            "description": "<p>Will be false if the old password did not match or the new pwd was not able to be changed</p>"          },          {            "group": "Error 4xx",            "type": "String",            "optional": false,            "field": "error",            "description": "<p>The error that caused success to be false</p>"          }        ]      },      "examples": [        {          "title": "NoMatch:",          "content": "HTTP/1.1 401 UNAUTHORIZED\n{\n  \"success\": false,\n  \"error\": \"NoMatch\"\n}",          "type": "json"        },        {          "title": "IdNotFound",          "content": "HTTP/1.1 404 NOT FOUND\n{\n    \"success\": false,\n    \"error\": \"IdNotFound\"\n}",          "type": "json"        },        {          "title": "ServerError:",          "content": "HTTP/1.1 500 INTERNAL SERVER ERROR\n{\n    \"success\": false,\n    \"error\": {\n        // An error object will be here\n    }\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "SP-backend/doc.js",    "groupTitle": "Users"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "SP-backend/apidoc/main.js",    "group": "_Users_amandalewis_gitRepos_SP_backend_apidoc_main_js",    "groupTitle": "_Users_amandalewis_gitRepos_SP_backend_apidoc_main_js",    "name": ""  }]
